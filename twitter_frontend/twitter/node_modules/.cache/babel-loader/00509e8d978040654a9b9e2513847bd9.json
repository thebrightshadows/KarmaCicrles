{"ast":null,"code":"var _jsxFileName = \"/Users/hardikbhardwaj/Desktop/twitter/twitter_frontend/twitter/src/components/tweets/tweets.js\",\n  _s = $RefreshSig$();\nimport { Avatar } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { data } from \"../datautility/tweetdata\";\nimport \"./tweets.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = () => {\n  _s();\n  var sorted_data = [];\n  const [tweets, settweets] = useState();\n  useEffect(() => {\n    for (let x of data.data) {\n      if (x.text) {\n        for (let y of data.includes.users) {\n          if (x.author_id == y.id) {\n            var localobject = {};\n            localobject['username'] = y.username;\n            localobject['name'] = y.name;\n            localobject['location'] = y.location;\n            localobject['text'] = x.text;\n            localobject['userid'] = x.author_id;\n            localobject['tweetid'] = x.id;\n          }\n          // sorted_data.push(localobject)\n        }\n\n        sorted_data.push(localobject);\n      }\n    }\n    settweets(sorted_data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweet-body\",\n    children: tweets === null || tweets === void 0 ? void 0 : tweets.map(tweet => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet\",\n        style: {\n          display: \"flex\",\n          paddingBottom: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet-left\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: tweet.name,\n            src: \"/broken-image.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet-tweet-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet-tweet-username\",\n            style: {\n              display: \"flex\"\n            },\n            children: tweet.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet-tweet-tweet\",\n            children: tweet.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Tweets, \"5jZaz6+0+olayao/b1PM26hcK1Y=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["Avatar","React","useEffect","useState","data","Tweets","sorted_data","tweets","settweets","x","text","y","includes","users","author_id","id","localobject","username","name","location","push","map","tweet","display","paddingBottom"],"sources":["/Users/hardikbhardwaj/Desktop/twitter/twitter_frontend/twitter/src/components/tweets/tweets.js"],"sourcesContent":["import { Avatar } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { data } from \"../datautility/tweetdata\";\nimport \"./tweets.css\";\n\n\nconst Tweets = () => {\n\n\n\n\n    var sorted_data = []\n\n    const [tweets, settweets] = useState()\n\n    useEffect(() => {\n\n        for (let x of data.data) {\n            if (x.text) {\n                for (let y of data.includes.users) {\n\n\n                    if (x.author_id == y.id) {\n                        var localobject = {}\n                        localobject['username'] = y.username\n                        localobject['name'] = y.name\n                        localobject['location'] = y.location\n                        localobject['text'] = x.text\n                        localobject['userid'] = x.author_id\n                        localobject['tweetid'] = x.id\n                    }\n                    // sorted_data.push(localobject)\n\n\n                }\n                sorted_data.push(localobject)\n            }\n        }\n        settweets(sorted_data)\n\n\n\n\n    }, [])\n\n\n\n\n\n    return (\n        <div className=\"tweet-body\" >\n            {\n                tweets?.map(tweet => {\n                    return (\n\n                        <div className=\"tweet\" style={{ display: \"flex\", paddingBottom: \"30px\" }}>\n                            <div className=\"tweet-left\">\n                                <Avatar alt={tweet.name} src=\"/broken-image.jpg\" ></Avatar>\n\n                            </div>\n                            <div className=\"tweet-tweet-body\">\n                                <div className=\"tweet-tweet-username\" style={{ display: \"flex\" }}>\n                                    {tweet.username}\n                                </div>\n                                <div className=\"tweet-tweet-tweet\">\n                                    {tweet.text}\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n\n        </div>\n    )\n}\n\nexport default Tweets\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,OAAO,cAAc;AAAC;AAGtB,MAAMC,MAAM,GAAG,MAAM;EAAA;EAKjB,IAAIC,WAAW,GAAG,EAAE;EAEpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,EAAE;EAEtCD,SAAS,CAAC,MAAM;IAEZ,KAAK,IAAIO,CAAC,IAAIL,IAAI,CAACA,IAAI,EAAE;MACrB,IAAIK,CAAC,CAACC,IAAI,EAAE;QACR,KAAK,IAAIC,CAAC,IAAIP,IAAI,CAACQ,QAAQ,CAACC,KAAK,EAAE;UAG/B,IAAIJ,CAAC,CAACK,SAAS,IAAIH,CAAC,CAACI,EAAE,EAAE;YACrB,IAAIC,WAAW,GAAG,CAAC,CAAC;YACpBA,WAAW,CAAC,UAAU,CAAC,GAAGL,CAAC,CAACM,QAAQ;YACpCD,WAAW,CAAC,MAAM,CAAC,GAAGL,CAAC,CAACO,IAAI;YAC5BF,WAAW,CAAC,UAAU,CAAC,GAAGL,CAAC,CAACQ,QAAQ;YACpCH,WAAW,CAAC,MAAM,CAAC,GAAGP,CAAC,CAACC,IAAI;YAC5BM,WAAW,CAAC,QAAQ,CAAC,GAAGP,CAAC,CAACK,SAAS;YACnCE,WAAW,CAAC,SAAS,CAAC,GAAGP,CAAC,CAACM,EAAE;UACjC;UACA;QAGJ;;QACAT,WAAW,CAACc,IAAI,CAACJ,WAAW,CAAC;MACjC;IACJ;IACAR,SAAS,CAACF,WAAW,CAAC;EAK1B,CAAC,EAAE,EAAE,CAAC;EAMN,oBACI;IAAK,SAAS,EAAC,YAAY;IAAA,UAEnBC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEc,GAAG,CAACC,KAAK,IAAI;MACjB,oBAEI;QAAK,SAAS,EAAC,OAAO;QAAC,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE;QAAO,CAAE;QAAA,wBACrE;UAAK,SAAS,EAAC,YAAY;UAAA,uBACvB,QAAC,MAAM;YAAC,GAAG,EAAEF,KAAK,CAACJ,IAAK;YAAC,GAAG,EAAC;UAAmB;YAAA;YAAA;YAAA;UAAA;QAAW;UAAA;UAAA;UAAA;QAAA,QAEzD,eACN;UAAK,SAAS,EAAC,kBAAkB;UAAA,wBAC7B;YAAK,SAAS,EAAC,sBAAsB;YAAC,KAAK,EAAE;cAAEK,OAAO,EAAE;YAAO,CAAE;YAAA,UAC5DD,KAAK,CAACL;UAAQ;YAAA;YAAA;YAAA;UAAA,QACb,eACN;YAAK,SAAS,EAAC,mBAAmB;YAAA,UAC7BK,KAAK,CAACZ;UAAI;YAAA;YAAA;YAAA;UAAA,QACT;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAEd,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAGJ;AAEd,CAAC;AAAA,GArEKL,MAAM;AAAA,KAANA,MAAM;AAuEZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}