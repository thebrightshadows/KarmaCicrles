{"ast":null,"code":"var _jsxFileName = \"/Users/hardikbhardwaj/Desktop/twitter/twitter_frontend/twitter/src/components/tweets/tweets.js\",\n  _s = $RefreshSig$();\nimport { Avatar } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { data } from \"../datautility/tweetdata\";\nimport \"./tweets.css\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = _ref => {\n  _s();\n  let {\n    tweets,\n    settweets,\n    constanttweets,\n    setconstanttweets\n  } = _ref;\n  const onDelete = prop => {\n    settweets(current => current.filter(tweet => tweet != prop));\n  };\n  const edittweet = prop => {};\n  var sorted_data = [];\n  const gettweets = data => {\n    for (let x of data.data) {\n      if (x.text) {\n        for (let y of data.includes.users) {\n          if (x.author_id == y.id) {\n            var localobject = {};\n            localobject['username'] = y.username;\n            localobject['name'] = y.name;\n            localobject['location'] = y.location;\n            localobject['text'] = x.text;\n            localobject['userid'] = x.author_id;\n            localobject['tweetid'] = x.id;\n          }\n        }\n        sorted_data.push(localobject);\n      }\n    }\n    return sorted_data;\n  };\n  useEffect(() => {\n    settweets(gettweets(data));\n    setconstanttweets(gettweets(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweet-body\",\n    children: tweets === null || tweets === void 0 ? void 0 : tweets.map((tweet, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet\",\n        style: {\n          display: \"flex\",\n          paddingBottom: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet-left\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: tweet.name,\n            src: \"/broken-image.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet-tweet-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet-tweet-username\",\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: tweet.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"100%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"fit-content\",\n                  marginRight: \" 0px\",\n                  marginLeft: \"auto\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Edit, {\n                      onClick: () => {\n                        edittweet();\n                      },\n                      style: {\n                        color: \"#bdbdbd6e\",\n                        paddingRight: \"10px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: () => {\n                      onDelete(tweet);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n                      style: {\n                        color: \"#bdbdbd6e\",\n                        paddingRight: \"6px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet-tweet-tweet\",\n            children: tweet.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Tweets, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["Avatar","React","useEffect","useState","data","Edit","DeleteForeverIcon","Tweets","tweets","settweets","constanttweets","setconstanttweets","onDelete","prop","current","filter","tweet","edittweet","sorted_data","gettweets","x","text","y","includes","users","author_id","id","localobject","username","name","location","push","map","index","display","paddingBottom","width","marginRight","marginLeft","color","paddingRight"],"sources":["/Users/hardikbhardwaj/Desktop/twitter/twitter_frontend/twitter/src/components/tweets/tweets.js"],"sourcesContent":["import { Avatar } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { data } from \"../datautility/tweetdata\";\nimport \"./tweets.css\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n\n\n\n\nconst Tweets = ({ tweets, settweets, constanttweets, setconstanttweets }) => {\n\n\n\n\n\n    const onDelete = (prop) => {\n\n        settweets(current => current.filter(tweet => (tweet != prop)))\n\n    }\n\n\n\n    const edittweet = (prop) => {\n\n\n\n\n    }\n\n\n\n\n    var sorted_data = []\n\n    const gettweets = (data) => {\n\n\n\n\n        for (let x of data.data) {\n            if (x.text) {\n                for (let y of data.includes.users) {\n\n\n                    if ((x.author_id == y.id)) {\n                        var localobject = {}\n\n                        localobject['username'] = y.username\n                        localobject['name'] = y.name\n                        localobject['location'] = y.location\n                        localobject['text'] = x.text\n                        localobject['userid'] = x.author_id\n                        localobject['tweetid'] = x.id\n                    }\n\n                }\n                sorted_data.push(localobject)\n            }\n        }\n        return sorted_data\n    }\n\n\n\n    useEffect(() => {\n\n        settweets(gettweets(data))\n        setconstanttweets(gettweets(data))\n\n\n    }, [])\n\n\n\n\n\n    return (\n        <div className=\"tweet-body\" >\n            {\n                tweets?.map((tweet, index) => {\n                    return (\n\n                        <div className=\"tweet\" key={index} style={{ display: \"flex\", paddingBottom: \"30px\" }}>\n                            <div className=\"tweet-left\">\n                                <Avatar alt={tweet.name} src=\"/broken-image.jpg\" ></Avatar>\n\n                            </div>\n                            <div className=\"tweet-tweet-body\">\n                                <div className=\"tweet-tweet-username\" style={{ display: \"flex\" }}>\n                                    <div>\n                                        {tweet.username}\n                                    </div>\n                                    <div style={{ width: \"100%\" }}>\n                                        <div style={{\n                                            width: \"fit-content\",\n                                            marginRight: \" 0px\",\n                                            marginLeft: \"auto\"\n                                        }} >\n                                            <div style={{ display: \"flex\" }}>\n                                                <div>\n                                                    <Edit onClick={() => { edittweet() }} style={{ color: \"#bdbdbd6e\", paddingRight: \"10px\" }}></Edit>\n                                                </div>\n                                                <div onClick={() => {\n                                                    onDelete(tweet)\n                                                }}>\n                                                    <DeleteForeverIcon style={{ color: \"#bdbdbd6e\", paddingRight: \"6px\" }}  ></DeleteForeverIcon>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                </div>\n                                <div className=\"tweet-tweet-tweet\">\n                                    {tweet.text}\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n\n\n\n        </div>\n    )\n}\n\nexport default Tweets\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}